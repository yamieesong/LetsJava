
public class Study {
	
	public static void main(String[] args) {
		
		/*
		 * 기초문법>>>
		 * 
		 * 변수와 메서드명 : 시작은 소문자 2단어 이상인 경우, 2번째부터 시작을 대문자로
		 * 
		 * 		변수와 메서드를 구분하는 방법
		 * 		네이밍 규칙은 같으나 명칭 뒤에 ()로 확인 가능
		 * 		예) createUser ← 변수
		 *     		createUser() ← 메서드
		 *     
		 * 클래스명 : 시작은 대문자
		 * 		예) ClassHelloWorld
		 * 
		 * System.out.println("HelloWorld");
		 * System → 대문자로 시작 클래스명
		 * out → 뒤에 () 없으니까 변수
		 * println() → 메서드
		 * 
		 * 
		 * 들여쓰기
		 * 
		 * public class HelloWorld {
		 * 		public static void main(String args[]){
		 * 			int age = 40;			 ← 들여쓰기 (같은 레벨은 앞 라인 맞추기)
		 * 			System.out.println(age); ← 들여쓰기 
		 * 		}
		 * } ← p가 시작하는 부분과 맞춰서 닫아준다
		 * 
		 * 
		 * 
		 * 변수>>>
		 * 변수란? 변할 수 있는 값. 메모리의 특정 공간에 저장되어 있는 값을 변경할 수 있는 공간
		 * 
		 * 1.변수의 선언
		 * 		데이터타입 변수명;						//변수 선언
		 * 		데이터타입 변수명 = 값;					//변수 선언과 동시에 값 초기화
		 * 
		 * 
		 * 상수>>>
		 * 상수란? 변할 수 없는 값. 메모리에 한 번 저장되면, 값을 변경할 수 없는 공간
		 * 
		 * 1.상수의 선언
		 * 		final 데이터타입 상수명 = 값;				//상수 선언과 동시에 초기화
		 * 		상수는 모두 대문자로 쓰는게 원칙
		 * 
		 * 		예) final double PI = 3.14;
		 * 			PI = 3.14 ← 컴파일 에러 발생
		 * 
		 * 			System.out.println(10);				//정수형상수
		 * 			System.out.println("문자열상수");	//문자열상수
		 * 
		 * 
		 * 데이터타입>>>
		 * 1.기본 데이터타입
		 * 		1-1.종류 : 정수,실수,논리
		 * 			1-1-1.정수 : int(4bytes), byte, short, long, char
		 * 				1-1-1-1.char
		 * 						char의 경우 정수형인데, 문자 집합과 1:1 매칭된다
		 * 						(2bytes)
		 * 			1-1-2.실수 : double(8bytes), float
		 * 			1-1-3.논리 : boolean
		 * 
		 * 2.참조 데이터타입
		 * 		2-1.종류 : 클래스/객체 - String, 배열 
		 * 			✔외우기! 클래스는 데이터타입이다. 참조 데이터 타입이다.
		 * 
		 * 
		 * 3.형변환(Type Casting)(큰 데이터를 작은 공간에 넣고 싶을 때 || 작은 데이터를 큰 공간에 넣고 싶을 때)
		 * 		1 byte = 8 bit = (2^7-1)까지
		 * 		byte a = 1000;						//정수형 int는 기본적으로 4byte
		 * 		=> byte a = (byte)1000; 			//앞에 (byte)를 써서 캐스팅
		 * 
		 * 		예) int a = 10;						//4byte
		 * 			double b = a;					//8byte 큰 공간인 b에 작은 값인 a가 들어가는 경우 자동형변환(묵시적)
		 * 
		 * 
		 * 4.연산자
		 * 		4-1.종류 : 사칙연산, 논리연산, 비트연산, 비교연산, ...  , 3항연산 등...
		 * 		4-2.기본적으로 이항연산이나 단항연산도 있다. 증감(++, --), 할당증감(+=, -=, ... ), !, ...
		 * 
		 * 
		 * 5.제어문
		 * 		5-1.정의 : 프로그램의 흐름을 제어하는 부분
		 * 		5-2.종류 : 조건(분기)문 	if, if ~ else, if ~ else if ~ else
		 * 								switch ~ case
		 * 								선택위주(양갈래 길을 제시해 주고 어디로 흘러갈래?)
		 * 
		 * 				  반복문			for문, while(조건식){실행문;}, do{실행문;}while(조건식);, 향상된for문(forEach문)
		 * 				  				위치 변경 위주(앞으로 가다가 뒤로 돌아가서 다시 확인하는 작업)
		 * 
		 * 
		 * 6.배열
		 * 		6-1.참조데이터(변수)입니다.
		 * 		6-2.배열의 선언법
		 * 			데이터타입[] 변수명; or 데이터타입 변수명[];		//배열의 선언(1차원배열)
		 * 			데이터타입[][] 변수명; or 데이터타입 변수명[][];	//2차원배열
		 * 
		 * 		6-3.배열의 길이를 구하는 방법 : 배열변수명.length		//숫자
		 * 		6-4.배열 선언 시 가장 큰 길이는? 배열변수명.length-1
		 * 			예) int[] a = new int[5]; 						//0,1,2,3,4
		 * 
		 */
		
	}

}
